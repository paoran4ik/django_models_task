Windows PowerShell
(C) Корпорация Майкрософт (Microsoft Corporation). Все права защищены.
Попробуйте новую кроссплатформенную оболочку PowerShell (https://aka.ms/pscore6)

(News Portal) PS C:\Users\orlov\PycharmProjects\pythonProject10> cd .\News_Portal\
(News Portal) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> venv/scripts/activate
venv/scripts/activate : Имя "venv/scripts/activate" не распознано как имя командлета, функции, файла сценария или выполняемой программы. Проверьте правильность написания имени, а также наличие и правильность пути, после чего повтор 
ите попытку.
строка:1 знак:1
 
(News Portal) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> cd //
cd : Не удается найти путь "//", так как он не существует.
строка:1 знак:1
+ cd //
+ ~~~~~
    + CategoryInfo          : ObjectNotFound: (//:String) [Set-Location], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.SetLocationCommand
 
(News Portal) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> cd ..
(News Portal) PS C:\Users\orlov\PycharmProjects\pythonProject10> venv/scripts/activate
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10> cd .\News_Portal\    
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> python manage.py makemigrations
Traceback (most recent call last):
  File "C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\manage.py", line 22, in <module>
    main()
  File "C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\core\management\__init__.py", line 442, in execute_from_command_line
    utility.execute()
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\core\management\__init__.py", line 416, in execute
    django.setup()
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\apps\registry.py", line 116, in populate
    app_config.import_models()
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\apps\config.py", line 269, in import_models
    self.models_module = import_module(models_module_name)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1206, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1178, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1149, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 940, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news\models.py", line 27, in <module>
    class Post(models.Model):
    author = models.ForeiginKey(Author, on_delete=models.CASCADE)
             ^^^^^^^^^^^^^^^^^^
AttributeError: module 'django.db.models' has no attribute 'ForeiginKey'. Did you mean: 'ForeignKey'?
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> python manage.py makemigrations
  news\migrations\0001_initial.py
    - Create model Post
    - Add field postCategory to post
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  Applying news.0001_initial... OK
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage shell
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\manage': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> cd .\News_Portal\
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\News_Portal> py manage shell  
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\News_Portal\\manage': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\News_Portal> py manage.py shell
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\News_Portal\\manage.py': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\News_Portal> cd ..             
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py shell
Python 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from newapp.models import *
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'newapp'
>>> from news.models import *   
>>> u1 = User.obgects.create_user(username='Alexandr') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'User' has no attribute 'obgects'
>>> u1 = User.objects.create_user(username='Alexandr') 
>>> u1
<User: Alexandr>
>>> u2 = User.objects.create_user(username='Pavel')     
>>> Author.objects.create(autoUser=u1) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: Author() got unexpected keyword arguments: 'autoUser'
>>> Author.objects.create(autorUser=u1)              
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: Author() got unexpected keyword arguments: 'autorUser'
>>> Author.objects.create(auhtorUser=u1) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: Author() got unexpected keyword arguments: 'auhtorUser'
>>> Author.objects.create(authorUser=u1) 
<Author: Author object (1)>
>>> Author.objects.create(authorUser=u2) 
<Author: Author object (2)>
>>> Category.objects.create(name='IT') 
<Category: Category object (1)>
>>> Category.objects.create(name='SPORT')
<Category: Category object (2)>
>>> Category.objects.create(name='CULTURE') 
<Category: Category object (3)>
>>> Category.objects.create(name='RELIGION') 
<Category: Category object (4)>
>>> author = Author.objects.get(id=1) 
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author,categoryType='NW', title='sometitle',text = 'sometext')
<Post: Post object (1)>
>>> Post.object.get(id= 1) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Post.object.get(id=1).title
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Post.objects.get(id=1).title 
'sometitle'
>>> Post.objects.create(author=author,categoryType='AR', title='django models task',text = 'this text will be in first article') 
<Post: Post object (2)>
>>> Post.objects.create(author=author,categoryType='AR', title='django models task',text = 'this text will be in second article') 
<Post: Post object (3)>
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1)) 
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=2)) 
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2)) 
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3)) 
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3)) 
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4)) 
>>> Comment.objects.create(commentPost = Post.object.get(id=1),commentUser=Author.objects.get(id=1), text='first comment text') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Comment.objects.create(commentPost = Post.objects.get(id=1),commentUser=Author.objects.get(id=1), text='first comment text') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
          ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 266, in __set__
    raise ValueError(
ValueError: Cannot assign "<Author: Author object (1)>": "Comment.commentUser" must be a "User" instance.
>>> Comment.objects.create(commentPost = Post.objects.get(id=1),commentUser=Author.objects.get(id=1).authorUser, text='first comment text') 
<Comment: Comment object (1)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=2),commentUser=Author.objects.get(id=2).authorUser, text='second comment text') 
<Comment: Comment object (2)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=3),commentUser=Author.objects.get(id=2).authorUser, text='this article is trash')  
<Comment: Comment object (3)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=3),commentUser=Author.objects.get(id=1).authorUser, text='this article is greate') 
<Comment: Comment object (4)>
>>>
KeyboardInterrupt
>>>  
KeyboardInterrupt
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
0
>>> Comment.objects.get(id=1).rating
0
>>> Comment.objects.get(id=1).like()                                                                                                            
>>> Comment.objects.get(id=1).rating                                                                                                            
0
>>> Comment.objects.get(id=1).like() 
>>> Comment.objects.get(id=1).rating                                                                                                            
0
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=2).rating
0
>>> Comment.objects.get(id=2)       
<Comment: Comment object (2)>
>>> Comment.objects.get(id=2).text
>>> Comment.objects.get(id=2).rating
>>> Comment.objects.get(id=2).like()
0
0
KeyboardInterrupt
>>> quit()
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py mange.py makemigrations
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\mange.py': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news> py mange.py makemigrations
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\news\\mange.py': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news> py manage.py makemigrations
C:\Python\python.exe: can't open file 'C:\\Users\\orlov\\PycharmProjects\\pythonProject10\\News_Portal\\news\\manage.py': [Errno 2] No such file or directory
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news> cd ..                      
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py makemigrations
No changes detected
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py migrate       
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  No migrations to apply.
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py shell  
Python 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> Comment.objects.get(id=2).text   
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Comment' is not defined
>>> from news.models export *     
  File "<console>", line 1
    from news.models export *
                     ^^^^^^
SyntaxError: invalid syntax
>>> from news.models import * 
>>> Comment.objects.get(id=2).text
'second comment text'
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=2).rating
1
>>> Comment.objects.get(id=1).like() 
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=3).like() 
>>> Comment.objects.get(id=3).dislike() 
>>> Comment.objects.get(id=3).dislike()
>>> 
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=4).like()    
>>> Comment.objects.get(id=4).like()
>>> 
>>> Comment.objects.get(id=4).like()
>>> Comment.objects.get(id=4).like()
>>> Comment.objects.get(id=2).like() 
>>> Comment.objects.get(id=2).like()
<Author: Author object (1)>
>>> a= Author.objects.get(id=1)
>>> a.update_rating()
Traceback (most recent call last):
  File "C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news\models.py", line 20, in update_rating
    self.seve()
    ^^^^^^^^^
AttributeError: 'Author' object has no attribute 'seve'
>>> quit
Use quit() or Ctrl-Z plus Return to exit
>>> quit()
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, news, sessions
Running migrations:
  No migrations to apply.
(venv) PS C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal> py manage.py shell  
Python 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> a= Author.objects.get(id=1) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Author' is not defined
>>> from news.models import *           
>>> a= Author.objects.get(id=1)         
>>> a.update_rating()           
>>> a.ratingAuthor
6
>>> b= Author.objects.get(id=2) 
>>> b.update_rating()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\News_Portal\news\models.py", line 13, in update_rating
    pRat += postRat.get('postRating')
TypeError: unsupported operand type(s) for +=: 'int' and 'NoneType'
>>> Post.objects.get(id=1).author                                                                                                               
<Author: Author object (1)>
>>> Post.objects.get(id=2).author 
<Author: Author object (1)>
>>> Post.objects.get(id=3).author 
<Author: Author object (1)>
>>> Post.objects.get(id=4).author 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\orlov\PycharmProjects\pythonProject10\venv\Lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
news.models.Post.DoesNotExist: Post matching query does not exist.
>>> Post.objects.create(author = Author.models.get(id=2), categoryType = 'NW', title ='some different title', text = 'some different text' ) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Author' has no attribute 'models'
>>> Post.objects.create(author = Author.models.get(id=2).authorUser, categoryType = 'NW', title ='some different title', text = 'some different text' ) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Author' has no attribute 'models'
>>> Post.objects.create(author = Author.models.get(id=2).authorUser, categoryType = 'NW', title ='some different title', text = 'some different text' )
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Author' has no attribute 'models'
>>> author2 = Author.models.get(id =2) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Author' has no attribute 'models'
>>> author2 = Author.authorUser.get(id =2) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'ForwardOneToOneDescriptor' object has no attribute 'get'
>>> author2 = Author.objects.get(id =2)    
>>> author2                            
<Author: Author object (2)>
>>> Post.objects.create(author =author2, categoryType = 'NW', title ='some different title', text = 'some different text' )                             
<Post: Post object (4)>
>>> Post.object.get(id=4).postThrough(id=4) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Post.object.get(id=4).category.add(Category.objects,get(id=1)) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Post.objects.get(id=4).category.add(Category.objects,get(id=1)) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Post' object has no attribute 'category'
>>> Post.objects.get(id=4).posrCategory.add(Category.objects,get(id=1)) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Post' object has no attribute 'posrCategory'
>>> Post.objects.get(id=4).postCategory.add(Category.objects,get(id=1)) 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'get' is not defined
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=1)) 
>>> Post.objects.get(id=4).postCategory.add(Category.objects.get(id=4)) 
>>> Post.objects.get(id=4).like()                                      
>>> Post.objects.get(id=4).like()
>>> Author.objects.get(id=2).update_rating()                           
>>> Author.objects.get(id=2).rating         
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'rating'
>>> b= Author.objects.get(id=2)    
>>> b.update_rating()                       
>>> b.ratingAuthor
6
>>> a.ratingAuthor
6
>>> Post.objects.get(id=4).like
<bound method Post.like of <Post: Post object (4)>>
>>> Post.objects.get(id=4).like()
>>> b.update_rating()             
>>> b.ratingAuthor              
9
>>> a = Author.objects.order_by('-ratingAuthor') 
>>> s
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 's' is not defined
>>> a
<QuerySet [<Author: Author object (2)>, <Author: Author object (1)>]>
>>> a = Author.objects.order_by('-ratingAuthor')[:1] 
>>> for i in a:                                     
... i.ratingAuthor 
  File "<console>", line 2
    i.ratingAuthor
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>> for i in a:    
... i.ratingAuthor 
  File "<console>", line 2
    i.ratingAuthor
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>> for i in a:    
... i.ratingAuthor      i.authorUser.username
  File "<console>", line 2
    i.ratingAuthor      i.authorUser.username
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>>                                     rname
>>> for i in a:
...     i.ratingAuthor
...     i.authorUser.username
... 
9
'Pavel'
>>> a = Post.object.order_by('-rating') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> a = Post.objects.order_by('-rating') 
>>> a
<QuerySet [<Post: Post object (4)>, <Post: Post object (1)>, <Post: Post object (2)>, <Post: Post object (3)>]>
>>> a = Post.objects.order_by('-rating')[:1] 
>>> a                                        
<QuerySet [<Post: Post object (4)>]>
>>> for i in a:
...     a.dateCreation
...     a.author
...     a.rating
...     a.title
...     a.preview()
... 
Traceback (most recent call last):
  File "<console>", line 2, in <module>
AttributeError: 'QuerySet' object has no attribute 'dateCreation'
>>> for i in a:    ion
...     i.dateCreation                       
...     a.preview()ion
... 
datetime.datetime(2023, 6, 5, 11, 50, 23, 715753, tzinfo=datetime.timezone.utc)
Traceback (most recent call last):
  File "<console>", line 3, in <module>
AttributeError: 'QuerySet' object has no attribute 'preview'
>>> for i in a:
...     i.dateCreation
...     i.title
...     i.author
...     i.rating
...     i.preview()
... 
datetime.datetime(2023, 6, 5, 11, 50, 23, 715753, tzinfo=datetime.timezone.utc)
'some different title'
<Author: Author object (2)>
3
'some different text...'
>>> Post.object.get(id=4).commentPost
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'object'
>>> Post.objects.get(id=4).commentPost 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Post' object has no attribute 'commentPost'
>>> Post.objects.get(id=4).commentPost
